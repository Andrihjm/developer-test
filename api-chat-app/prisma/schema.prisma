// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  rooms    RoomParticipant[]
}

model Room {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())

  participants RoomParticipant[]
  messages     Message[]
}

model RoomParticipant {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
  roomId   String   @db.ObjectId
  room     Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  joinedAt DateTime @default(now())
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  senderId  String   @db.ObjectId
  sender    User     @relation(fields: [senderId], references: [id])
  roomId    String   @db.ObjectId
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
}
